// for dummies created by Matsueda Nobuaki 2018/11/05 13:15

/* 家計簿テーブル定義 */
日付 DATE NOTNULL;
費目 VARCHAR(16) NOT NULL;
メモ VARCHAR(16) NOT NULL;
入金額 INT NOT NULL;
入金額 INT NOT NULL;

// 家計簿表示構造
show colunms from 家計簿;

/* テーブルの作成 */

// 0.subquery_dbテーブルを作成
create database subquery_db;


// 1.subquery_dbテーブルを使用
use subquery_db;


// 1.家計簿テーブルを作成
create table 家計簿(
日付 DATE NOT NULL,
費目 VARCHAR(16) NOT NULL,
メモ VARCHAR(32) NOT NULL,
入金額 INT NOT NULL,
出金額 INT NOT NULL
);

// 2.テーブル構造を表示
show columns from 家計簿;

//3. データを挿入(P122. 4-1 INSERT)
INSERT INTO 家計簿 VALUES(
'2012-12-10','給料','11月の給料',280000,0);
INSERT INTO 家計簿 VALUES(
'2012-12-18','水道高熱費','水道代',0,4200);
INSERT INTO 家計簿 VALUES(
'2012-12-24','食費','レストランみやび',0,5000);
INSERT INTO 家計簿 VALUES(
'2012-12-25','居住費','1月の家賃支払い',0,80000);
INSERT INTO 家計簿 VALUES(
'2013-01-10','給料','12月の給料',0,80000);
INSERT INTO 家計簿 VALUES(
'2013-01-13','教育娯楽費','スッキリシネマズ',0,1800);
INSERT INTO 家計簿 VALUES(
'2013-01-13','食費','新年会',0,5000);
INSERT INTO 家計簿 VALUES(
'2013-01-25','居住費','1月の家賃支払い',0,80000);

// 3-2.データを挿入(P.122 4-2 INSERT)
INSERT INTO 家計簿 VALUES(
'2013-02-03','食費','コーヒーを購入',0,380);
INSERT INTO 家計簿 VALUES(
'2013-02-10','給料','1月の給料',280000,0);
INSERT INTO 家計簿 VALUES(
'2013-02-11','教養娯楽費','書籍を購入',0,2800);
INSERT INTO 家計簿 VALUES(
'2013-02-14','交際費','同期会の会費',0,5000);
INSERT INTO 家計簿 VALUES(
'2013-02-18','水道光熱費','1月の電気代',0,7560);

// 4.家計簿テーブルの構造を表示
select *
from 家計簿;

/* 副問い合わせ(サブクエリや副照会と呼ぶ) */

// 1.出金額の最大を取得して値を書き留めておく
select max(出金額) 
from 家計簿;

// 出金額→最大出金額
select max(出金額) AS 最大出金額 from 家計簿;

// 2."1"で得た金額を条件式に記述して費目と金額を取得
select 費目,出金額
from 家計簿
where 出金額 = 7560;

/* selectをネストする事でこれを一つの文にまとめることができる */

// 1.1つのＳＱＬ文で最大の出費に関する費目と合計を求める
select 費目,出金額
from 家計簿
where 出金額 = ( 
select max(出金額) 
from 家計簿
);


// 以下自分用メモ


// 家計簿集計テーブル作成
create table 家計簿集計 (
費目 VARCHAR(16) NOT NULL, 
合計 INT NOT NULL, 
平均 INT NOT NULL, 
最大 INT NOT NULL, 
最小 INT NOT NULL, 
回数 INT NOT NULL
);

// 構造表示
show columns from 家計簿集計;

// SET句で副問合せを利用する
update 家計簿集計
set 平均 = (
select avg(出金額)
from 家計簿
where 出金額 > 0
and 費目 = '食費')
where 費目 = '食費';

// データを挿入
insert into 家計簿集計 values(
'住居費',240000,80000,80000,80000,3);
insert into 家計簿集計 values(
'水道光熱費',11760,5880,7560,4200,2);
insert into 家計簿集計 values(
'食費',10380,5000,5000,380,3);
insert into 家計簿集計 values(
'教養娯楽費',4600,2300,2800,1800,2);
insert into 家計簿集計 values(
'給料',840000,280000,280000,280000,3);

/* UPDATEを使って居住費の回数を修正 */

// updateとwhereで住居費の回数を修正
update 家計簿集計
set 回数 = 2
where 費目 = '居住費';

*/ update 家計簿集計
set 回数 = 2
where 合計 = 240000;
*/ //合計の数値で指定してもよい

// SET句で副問合せを利用する
update 家計簿集計
set 平均 = (
select avg(出金額)
from 家計簿
where 出金額 > 0
and 費目 = '食費')
where 費目 = '食費';

// データを挿入
insert into 家計簿集計 values(
'住居費',240000,80000,80000,80000,3);
insert into 家計簿集計 values(
'水道光熱費',11760,5880,7560,4200,2);
insert into 家計簿集計 values(
'食費',10380,5000,5000,380,3);
insert into 家計簿集計 values(
'教養娯楽費',4600,2300,2800,1800,2);
insert into 家計簿集計 values(
'給料',840000,280000,280000,280000,3);

/* UPDATEを使って居住費の回数を修正 */

// updateとwhereで住居費の回数を修正
update 家計簿集計
set 回数 = 2
where 費目 = '居住費';

*/ update 家計簿集計
set 回数 = 2
where 合計 = 240000;
*/ // 合計の数値で指定してもよい

// 選択リストで副問い合わせを利用
select 日付,メモ,出金額,
(select 合計 
from 家計簿集計
where 費目 = '食費') AS  過去の合計額
from 家計簿
where 費目 = '食費';

// new added! 16:00 各種演算子の使い方を追記 

/* 演算子の使い方
   IN  〜の中にデータがある
   ANY 〜のいずれか
   ALL 〜の中ですべて
*/w

// INを使った条件式の例
// 費目の中に指定したデータがある場合出力
select * 
from 家計簿集計
where 費目 
in ('食費','水道光熱費','教養娯楽費','給料');


// IN演算子使って家計簿集計を表示
select *
from 家計簿集計
where 費目
IN('住居費','水道光熱費','食費','教養娯楽費','給料');

// IN(中にデータ有)とDISTINCT(重複消去)演算子
select *
from 家計簿集計
where 費目 
IN (select distinct 費目 
from 家計簿);
// IN演算子は重複項目があっても動作するためdistinctは不要に思われるが、
// データベースが膨大になると処理速度に影響するため使用。と独自解釈

// DISTINCT(重複削除)の使い方 

select distinct 費目 
from 家計簿;

// 13 rows in set (0.00 sec)

// distinctがないと重複カラムが表示される例
select 費目 
from 家計簿;

// 8 rows in set (0.00 sec)

// ANYで副問合せを利用する
select *
from 家計簿
where 費目 = '食費'
and 出金額 < any (select 出金額 from 家計簿
where 費目 = '食費');

// 出金額が5000以下,5000以下,380以下を実現した例
// any演算子はselect from whereで指定しないと使えない
select *
from 家計簿
where 出金額 < any (
select 出金額
from 家計簿
where 出金額 < 5000 and 出金額 < 5000 and 出金額 and 380);
